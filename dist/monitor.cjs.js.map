{"version":3,"file":"monitor.cjs.js","sources":["../src/config.js","../src/utils.js","../src/cache.js","../src/report.js","../src/performance/fetch.js","../src/performance/observeEntries.js","../src/performance/observeLCP.js","../src/performance/observeFCP.js","../src/performance/observeLoad.js","../src/performance/observePaint.js","../src/performance/xhr.js","../src/performance/index.js","../src/error/index.js","../src/behavior/onClick.js","../src/behavior/pageChange.js","../src/behavior/pv.js","../src/behavior/index.js","../src/webMonitorSDK.js"],"sourcesContent":["\r\n//自己定义的参数\r\nconst config = {\r\n    // url: 'http://localhost:9800/reportData',\r\n    url: '',\r\n    projectName: 'feMonitor', //项目名字\r\n    appID: \"123\",\r\n    userId: \"123\",\r\n    isImageUpload: false,\r\n    batchSize: 5, //批量上报的大小\r\n}\r\n\r\n\r\nexport function setConfig(options) {\r\n    for (const key in config) {\r\n        if (options[key]) {\r\n            config[key] = options[key];\r\n        }\r\n    }\r\n}\r\n\r\nexport default config;","\r\n//公共第三方工具\r\nexport function deepCopy(target) {\r\n    if (typeof target === 'object') {\r\n        const result = Array.isArray(target) ? [] : {};\r\n        for (const key in target) {\r\n            if (typeof target[key] == 'object') {\r\n                result[key] = deepCopy(target[key]);\r\n            } else {\r\n                result[key] = target[key];\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n    return target\r\n}\r\n\r\n\r\nexport function generateUniqueId() {\r\n    return \"ID-\" + Date.now() + \"-\" + Math.random().toString(36).substring(2, 9);\r\n  }","import { deepCopy } from \"./utils\";\r\n\r\n\r\nconst cache = [];\r\nexport function getCache() {\r\n    return deepCopy(cache);\r\n}\r\n\r\nexport function addCache(data) {\r\n    cache.push(data);\r\n}\r\n\r\nexport function clearCache() {\r\n    cache.length = 0;\r\n}","import config from \"./config\";\r\nimport { addCache, getCache, clearCache } from \"./cache\";\r\nimport { generateUniqueId } from \"./utils\";\r\n\r\nexport const originalProto = XMLHttpRequest.prototype;\r\nexport const originalOpen = originalProto.open;\r\nexport const originalSend = originalProto.send;\r\n\r\n//减少一条一条上报\r\nexport function report(data) {\r\n    if (!config.url) {\r\n        console.error('请设置上传 url 地址');\r\n    }\r\n    const reportData = JSON.stringify({\r\n        id: generateUniqueId(),\r\n        data,\r\n    });\r\n    // 上报数据，使用图片的方式\r\n    if (config.isImageUpload) {\r\n        imgRequest(reportData);\r\n    } else {\r\n        // 优先使用 sendBeacon\r\n        if (window.navigator.sendBeacon) {\r\n            return beaconRequest(reportData);\r\n        } else {\r\n            xhrRequest(reportData);\r\n        }\r\n    }\r\n}\r\n\r\n//实际业务调用这个函数去上报\r\nexport function lazyReportBatch(data) {\r\n  //定义一些缓存的方法\r\n  addCache(data);\r\n  const dataCache = getCache();\r\n  console.error(\"缓存数据\", dataCache);\r\n  if (dataCache.length && dataCache.length > config.batchSize) {\r\n    report(dataCache);\r\n    clearCache();\r\n  }\r\n}\r\n\r\n//三种上报方式\r\n\r\nexport function imgRequest(data) {\r\n  const img = new Image();\r\n  img.src = config.url + \"?data=\" + encodeURIComponent(JSON.stringify(data));\r\n}\r\n\r\nexport function xhrRequest(data) {\r\n  if (window.requestIdleCallback) {\r\n    window.requestIdleCallback(\r\n      () => {\r\n        const xhr = new XMLHttpRequest();\r\n        originalOpen.call(xhr, \"post\", config.url);\r\n        originalSend.call(xhr, JSON.stringify(data));\r\n      },\r\n      { timeout: 3000 }\r\n    );\r\n  } else {\r\n    setTimeout(() => {\r\n      const xhr = new XMLHttpRequest();\r\n      originalOpen.call(xhr, \"post\", url);\r\n      originalSend.call(xhr, JSON.stringify(data));\r\n    });\r\n  }\r\n}\r\n\r\n//sendBeacon有兼容性\r\nexport function beaconRequest(data) {\r\n  //空闲时间内去上传\r\n  if (window.requestIdleCallback) {\r\n    window.requestIdleCallback(\r\n      () => {\r\n        window.navigator.sendBeacon(config.url, data);\r\n      },\r\n      {\r\n        timeout: 2000,\r\n      }\r\n    );\r\n  } else {\r\n    setTimeout(() => {\r\n      window.navigator.sendBeacon(config.url, data);\r\n    }, 2000);\r\n  }\r\n}\r\nexport function isSupportBeacon() {\r\n  return \"sendBeacon\" in navigator;\r\n}\r\n","import { lazyReportBatch } from \"../report\";\r\n\r\nconst originalFetch = window.fetch;\r\n\r\nfunction overwriteFetch() {\r\n  window.fetch = function newFetch(url, config) {\r\n    //计算时间\r\n    const startTime = Date.now();\r\n    const reportData = {\r\n      type: \"performance\",\r\n      subType: \"fetch\",\r\n      url,\r\n      method: config?.method,\r\n      startTime,\r\n    };\r\n\r\n    return originalFetch(url, config)\r\n      .then((response) => {\r\n        const endTime = Date.now();\r\n        const duration = endTime - startTime;\r\n        reportData.endTime = endTime;\r\n        reportData.duration = duration;\r\n        //   reportData.success = status >= 200 && status < 300; //请求是否成功,200-300认为成功 response.ok\r\n        //   reportData.success = response.ok; //请求是否成功,200-300认为成功\r\n        //   reportData.status = response.status;;\r\n\r\n        //克隆响应对象，以便在不影响原始响应的情况下读取其内容或属性\r\n\r\n        // Response 对象的流特性：\r\n        // Response 对象的 body 是一个流（ReadableStream），只能被读取一次。\r\n        // 如果直接读取 response 的内容（如 response.json() 或 response.text()），原始响应的流会被消耗，导致后续代码无法再使用该响应。\r\n        const data = response.clone();\r\n        reportData.status = data.status;\r\n        reportData.success = data.ok;\r\n        //todo：上报数据\r\n        return response;\r\n      })\r\n      .catch((err) => {\r\n        const endTime = Date.now();\r\n        const duration = endTime - startTime;\r\n        reportData.endTime = endTime;\r\n        reportData.duration = duration;\r\n        reportData.success = false;\r\n        reportData.status = 0;\r\n\r\n        //todo：上报数据\r\n        // return Promise.reject(err);\r\n        lazyReportBatch(reportData);\r\n      });\r\n  };\r\n}\r\n\r\nexport default function fetch() {\r\n  overwriteFetch();\r\n}\r\n","import { lazyReportBatch } from \"../report\";\r\n\r\n\r\n// document.readyState === 'complete' ?\r\n\r\n//{2}\r\n//页面加载完调用observeEvent方法函数\r\n\r\n// document.readyState 是一个表示文档加载状态的属性，可能的值包括：\r\n// \"loading\"：文档仍在加载。\r\n// \"interactive\"：文档已加载完成，文档已被解析，但子资源（如图片、样式表等）可能尚未加载完成。\r\n// \"complete\"：文档和所有子资源都已加载完成\r\n\r\n// 利用函数执行？\r\nexport default function observerEntries() {\r\n  if (document.readyState === \"complete\") {\r\n    observeEvent();\r\n  } else {\r\n    const onLoad = () => {\r\n      observeEvent();\r\n      window.removeEventListener(\"load\", onLoad, true);\r\n    };\r\n    window.addEventListener(\"load\", onLoad, true);\r\n  }\r\n}\r\n\r\n//{1}\r\nexport function observeEvent() {\r\n  const entryHandler = (list) => {\r\n    const data = list.getEntries();\r\n    for (let entry of data) {\r\n      if (observer) {\r\n        //停止 PerformanceObserver 对性能条目的监听。\r\n        observer.disconnect();\r\n      }\r\n\r\n      //选择entr里你需要的资源进行上报就行\r\n      const reportData = {\r\n        name: entry.name,\r\n        type: \"performance\",\r\n        subType: entry.entryType,\r\n        sourceType: entry.initiatorType, //资源来源\r\n        duration: entry.duration, //资源加载时间 持续\r\n        //dns解析时间 差值计算\r\n        dns: entry.domainLookupEnd - entry.domainLookupStart,\r\n        tcp: entry.connectEnd - entry.connectStart, //tcp连接时间\r\n        redirect: entry.redirectEnd - entry.redirectStart, //重定向时间\r\n        ttfb: entry.responseStart, //首字节时间，Time to First Byte\r\n        protocol: entry.nextHopProtocol, //请求协议\r\n        responseBodySize: entry.encodedBodySize, //响应内容大小\r\n        responseHeaderSize: entry.transferSize - entry.encodedBodySize, //响应头部大小\r\n        transferSize: entry.transferSize, //请求内容大小（头部+body）\r\n        resourceSize: entry.decodedBodySize, //资源解压后的大小（解码，压解）\r\n        startTime: performance.now(),\r\n      };\r\n      //   console.log(entry);\r\n      lazyReportBatch(reportData);\r\n    }\r\n  };\r\n  let observer = new PerformanceObserver(entryHandler);\r\n\r\n  observer.observe({ type: [\"resource\"], buffered: true });\r\n}\r\n","import { lazyReportBatch } from \"../report\";\r\n\r\nexport default function observeLCP() {\r\n  const observer = new PerformanceObserver(entryHandler);\r\n\r\n  //监听lcp type需要变化一下  最大绘制时间\r\n  observer.observe({ type: \"largest-contentful-paint\", buffered: true });\r\n\r\n  function entryHandler(list, obj) {\r\n    //lcp断开的位置不一样\r\n    if (observer) {\r\n      observer.disconnect();\r\n    }\r\n\r\n    //不需要判断条件\r\n    for (const entry of list.getEntries()) {\r\n      const json = entry.toJSON();\r\n      console.log(json);\r\n\r\n      const reportData = {\r\n        ...json,\r\n        type: \"performance\", //性能相关的\r\n        subType: entry.name,\r\n        pageUrl: window.location.href,\r\n      };\r\n      lazyReportBatch(reportData);\r\n    }\r\n  }\r\n}\r\n","import { lazyReportBatch } from \"../report\";\r\n\r\nexport default function observeFCP() {\r\n  const observer = new PerformanceObserver(entryHandler);\r\n\r\n  observer.observe({ type: \"paint\", buffered: true });\r\n\r\n  function entryHandler(list, obj) {\r\n    //list性能指标条目\r\n    for (const entry of list.getEntries()) {\r\n      //改下这里就行\r\n      if (entry.name === \"first-contentful-paint\") {\r\n        observer.disconnect();\r\n\r\n        const json = entry.toJSON();\r\n        //得到需要上报的数据\r\n        console.log(json);\r\n\r\n        //编写需要上报的数据格式\r\n        const reportData = {\r\n          ...json,\r\n          type: \"performance\", //性能相关的\r\n          // subType: 'paint'\r\n          subType: entry.name,\r\n          // 当前页面的URl\r\n          pageUrl: window.location.href,\r\n        };\r\n        lazyReportBatch(reportData);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { lazyReportBatch } from \"../report\";\r\n\r\n\r\nexport default function observeLoad() {\r\n    //监听pageShow事件 \r\n    window.addEventListener('pageshow', function (event) {\r\n        requestAnimationFrame(() => {\r\n            ['load', 'DOMContentLoaded'].forEach((type) => {\r\n                //计算、上报数据\r\n                const reportData = {\r\n                    type: 'performance',\r\n                    subType: type,\r\n                    pageUrl: window.location.href,\r\n                    // \r\n                    startTime: performance.now() - event.timeStamp, //当前时间点 - 显示时间点（计算从页面显示到当前的时间间隔）\r\n                }\r\n                lazyReportBatch(reportData);\r\n            });\r\n\r\n        });\r\n    });\r\n}","import { lazyReportBatch } from \"../report\";\r\n\r\n\r\nexport default function observePaint() {\r\n  //new 一个\r\n  //需要传一个回调函数\r\n  const observer = new PerformanceObserver(entryHandler);\r\n\r\n  //缓冲区，arrayBuffer，缓存  这里的buffered: true 是确保观察到所有的paint时间\r\n  //buffered  检查已缓冲的性能条目\r\n\r\n  // entryTypes：一个数组，包含要观察的性能条目类型。可以填的值包括:\r\n  // frame： 指的是整个页面，包括页面的导航性能和整体加载时间。它可以监测与整个页面的性能相关的数据。\r\n  // navigation： 与页面导航和加载时间相关，提供有关导航事件（如页面加载、重定向等）的性能数据。\r\n  // resource： 与页面中加载的各种资源相关，如图像、脚本、样式表等。它可以监测单个资源的加载性能，包括资源的开始和结束时间，以及其他相关信息。\r\n  // mark： 与性能标记（mark）相关，性能标记是在代码中设置的时间戳，通常用于记录特定事件的时间，以便后续性能分析。这提供了在页面加载期间创建性能标记的方式。\r\n  // measure： 与性能测量（measure）相关，性能测量用于测量两个性能标记之间的时间间隔，以获取更详细的性能数据。这提供了测量和分析特定事件之间的时间差的方式。\r\n  // paint： 与页面绘制性能相关，可以是 \"first-paint\"（首次绘制）或 \"first-contentful-paint\"（首次内容绘制fcp）之一。这些指标表示页面呈现的关键时间点，可以帮助我们评估用户视觉上的加载体验。\r\n  // observer.observe({ entryTypes: ['resource', 'paint'] });\r\n\r\n  //编写的总体流程\r\n  observer.observe({ type: \"paint\", buffered: true });\r\n\r\n  /**\r\n   *\r\n   * @param {*} list  性能观察条目列表\r\n   * @param {*} obj   观察者对象\r\n   */\r\n\r\n  // 回调函数会在性能指标发生变化时被触发，它接受一个参数：entries，它是一个性能条目对象的数组，每个对象描述了一个性能条目。\r\n  // const callback = entries => {\r\n  //     entries.forEach(entry => {\r\n  //       // 处理性能指标数据\r\n  //     });\r\n  //   };\r\n  function entryHandler(list, obj) {\r\n    //循环一下\r\n    for (const entry of list.getEntries()) {\r\n      // FP\r\n      if (entry.name === \"first-paint\") {\r\n        //监听到对应就停止\r\n        //当等于FP，取消监听\r\n        observer.disconnect();\r\n\r\n        const json = entry.toJSON();\r\n        //得到需要上报的数据\r\n        console.log(json);\r\n\r\n        //编写需要上报的数据格式\r\n        const reportData = {\r\n          ...json,\r\n          type: \"performance\", //性能相关的\r\n          // subType: 'paint'\r\n          subType: entry.name,\r\n          // 当前页面的URl\r\n          pageUrl: window.location.href,\r\n        };\r\n        //发送数据 上报 todo;\r\n        lazyReportBatch(reportData);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { lazyReportBatch } from \"../report\";\r\n\r\n//统计ajax请求时间、ajax，使用axios发送\r\n\r\n//axios是封装的xhr\r\n//重写ajax，添加功能\r\n\r\nexport const originalProto = XMLHttpRequest.prototype;\r\n// export const originalSend = XMLHttpRequest.prototype.send;\r\n\r\n//拿到原生send、open方法\r\nexport const originalSend = originalProto.send;\r\nexport const originalOpen = originalProto.open;\r\n\r\nexport default function xhr() {\r\n  overwriteSendAndOpen();\r\n}\r\n\r\nfunction overwriteSendAndOpen() {\r\n  // 重写open方法\r\n  // 重写就是为了取url和method\r\n  originalProto.open = function newOpen(...args) {\r\n    this.url = args[1]; //保存url\r\n    this.method = args[0]; //保存请求方法\r\n    originalOpen.apply(this, args); //调用原生open方法\r\n  };\r\n\r\n  originalProto.send = function newSend(...args) {\r\n    this.startTime = Data.now(); //保存请求开始时间\r\n    const onLoaded = () => {\r\n      this.endTime = Data.now(); //保存请求结束时间\r\n      this.duration = this.endTime - this.startTime; //计算请求耗时\r\n      // const duration = Data.now() - this.startTime; //计算请求耗时\r\n      const { url, method, startTime, endTime, duration, status } = this; //status是ajax状态\r\n\r\n      //我们需要统计的数据\r\n      const reportData = {\r\n        status,\r\n        duration,\r\n        url,\r\n        method: method.toUpperCase(), //请求方法\r\n        startTime,\r\n        endTime,\r\n        type: \"performance\",\r\n        success: status >= 200 && status < 300, //请求是否成功,200-300认为成功\r\n        subType: \"xhr\",\r\n      };\r\n      //上报数据 todo\r\n      // report(reportData);\r\n      lazyReportBatch(reportData);\r\n\r\n      this.removeEventListener(\"loadend\", onLoaded, true); //移除事件监听\r\n    };\r\n    // loadend 是一个事件，表示一个网络请求（如 XMLHttpRequest 或 fetch）的生命周期结束，无论请求是成功完成、失败还是被取消，都会触发该事件。\r\n    // load：仅在请求成功完成时触发（状态码 200-299）。\r\n    // error：仅在请求失败时触发（如网络错误）。\r\n    // abort：仅在请求被取消时触发。\r\n    // timeout：仅在请求超时时触发。\r\n    // loadend：无论请求成功、失败、取消或超时，都会触发。\r\n\r\n    // 这里的loadend是一个资源加载进度停止后被触发（XML的调用、img、video之类）\r\n    this.addEventListener(\"loadend\", onLoaded, true);\r\n    originalSend.apply(this, args);\r\n  };\r\n}\r\n","import fetch from \"./fetch\";\r\nimport observeEntries from \"./observeEntries\";\r\nimport observeLCP from \"./observeLCP\";\r\nimport observeFCP from \"./observeFCP\";\r\nimport observeLoad from \"./observeLoad\";\r\nimport observePaint from \"./observePaint\";\r\nimport xhr from \"./xhr\";   \r\n\r\nexport default function performance() {\r\n    fetch();\r\n    observeEntries();\r\n    observeLCP();\r\n    observeFCP();\r\n    observeLoad();\r\n    observePaint();\r\n    xhr();\r\n}","import { lazyReportBatch } from \"../report\";\r\n\r\nexport default function error() {\r\n  //监听全局的错误事件(只是捕获资源加载的错误：js css img等)\r\n  window.addEventListener(\r\n    \"error\",\r\n    function (event) {\r\n      // console.log(event);\r\n      //根据target判断一下\r\n      const target = event.target;\r\n      if (!target) {\r\n        //说明不是一个js、css或者图片这些静态资源的错误，应该是纯JS的错误\r\n        return;\r\n      }\r\n\r\n      if (target.src || target.href) {\r\n        const url = target.src || target.href;\r\n        //组装要上报的data\r\n        const reportData = {\r\n          type: \"error\",\r\n          subType: \"static resource\",\r\n          url,\r\n          // 计算当前时间 - 资源加载时间\r\n          html: target.outerHTML,\r\n          pageUrl: window.location.href,\r\n          paths: event.path, //具体的资源路径\r\n        };\r\n        //todo:上报错误信息\r\n        lazyReportBatch(reportData);\r\n      }\r\n    },\r\n    true\r\n  );\r\n\r\n  //捕获真正JS的错误\r\n  window.onerror = function (message, source, lineno, colno, error) {\r\n    const reportData = {\r\n      type: \"error\",\r\n      subType: \"js\",\r\n      message,\r\n      source, //url\r\n      lineno,\r\n      colno,\r\n      stack: error && error.stack, //错误堆栈\r\n      pageUrl: window.location.href,\r\n      startTime: performance.now(), //当前时间\r\n    };\r\n    lazyReportBatch(reportData);\r\n  };\r\n  //监听异步错误 promise、async await\r\n  window.addEventListener(\r\n    \"unhandledrejection\",\r\n    function (e) {\r\n      const reportData = {\r\n        type: \"error\",\r\n        subType: \"promise\",\r\n        reason: e.reason?.stack || e.reason, //存在再取\r\n        pageUrl: window.location.href,\r\n        startTime: performance.now(), //当前时间 e.timeStamp也行\r\n      };\r\n      // todo:上报数据\r\n      lazyReportBatch(reportData);\r\n    },\r\n    true\r\n  );\r\n}\r\n","import { lazyReportBatch } from '../report';\r\nexport default function click() {\r\n    ['mousedown', 'touchstart'].forEach(eventType => {\r\n        window.addEventListener(eventType, e => {\r\n            const target = e.target;\r\n            //点到元素上才进行上报\r\n            if (target.tagName){\r\n                const reportData = {\r\n                    // scrollTop: document.documentElement.scrollTop,\r\n                    type: 'behavior',\r\n                    subType: 'click',\r\n                    target: target.tagName,\r\n                    startTime: e.timeStamp,\r\n                    innerHtml: target.innerHTML,\r\n                    outerHtml: target.outerHTML,\r\n                    with: target.offsetWidth,\r\n                    height: target.offsetHeight,\r\n                    eventType,\r\n                    path: e.path,\r\n                }\r\n                lazyReportBatch(reportData);\r\n            }\r\n            \r\n        });\r\n    });\r\n}","import { lazyReportBatch } from '../report';\r\nimport {generateUniqueId} from '../utils';\r\n\r\nexport default function pageChange() {\r\n    // hash histroy\r\n    let oldUrl = '';\r\n    window.addEventListener(\r\n        'hashchange',\r\n        function (event) {\r\n            console.error('hashchange', event);\r\n            const newUrl = event.newURL;\r\n            const reportData = {\r\n                form: oldUrl,\r\n                to: newUrl,\r\n                type: 'behavior',\r\n                subType: 'hashchange',\r\n                startTime: performance.now(),\r\n                uuid: generateUniqueId(),\r\n            };\r\n            lazyReportBatch(reportData);\r\n            oldUrl = newUrl;\r\n        },\r\n        true  //尽早捕获事件\r\n    );\r\n\r\n    let from = '';\r\n    window.addEventListener(\r\n        'popstate',\r\n        function (event) {\r\n            console.error('popstate', event);\r\n            const to = window.location.href;\r\n            const reportData = {\r\n                form: from,\r\n                to: to,\r\n                type: 'behavior',\r\n                subType: 'popstate',\r\n                startTime: performance.now(),\r\n                uuid: generateUniqueId(),\r\n            };\r\n            lazyReportBatch(reportData);\r\n            from = to;\r\n        },\r\n        true\r\n    );\r\n\r\n}","import { generateUniqueId } from \"../utils\";\r\nimport { lazyReportBatch } from \"../report\";\r\n\r\nexport default function pv() {\r\n    const reportData = {\r\n        type: \"behavior\",\r\n        subType: \"pv\",\r\n        pageUrl: window.location.href,\r\n        startTime: performance.now(),\r\n        referror: document.referrer, //上一个页面的url(页面从哪来的)\r\n        uuid: generateUniqueId() , //用户唯一标识\r\n    };\r\n    lazyReportBatch(reportData);\r\n}","\r\n//入口文件\r\nimport onClick from './onClick';\r\nimport pageChange from './pageChange';\r\nimport pv from './pv';\r\n\r\nexport default function behavior() {\r\n    onClick(),\r\n    pageChange(),\r\n    pv()\r\n}\r\n","import performance from \"./performance/index\";\r\nimport error from \"./error/index\";\r\nimport behavior from \"./behavior/index\";\r\nimport { setConfig } from \"./config\";\r\nimport { lazyReportBatch } from \"./report\";\r\n\r\n//内部变量，两个杠杠\r\nwindow.__webMonitorSDK__ = {\r\n    version: '0.0.1',\r\n}\r\n\r\n//Vue 以插件的形式开发\r\nexport  function install(Vue, options) {\r\n    if (__webMonitorSDK__.vue) return;\r\n    __webMonitorSDK__.vue = true;\r\n    const handler = Vue.config.errorHandler; //Vue官方的errorHandler\r\n    Vue.config.errorHandler = function (err, vm, info) {\r\n        // todo: 上报具体的错误信息\r\n        const reportData = {\r\n            info,\r\n            error: err.stack,\r\n            subType: 'vue',\r\n            type: 'error',\r\n            startTime: window.performance.now(),\r\n            pageURL: window.location.href,\r\n        };\r\n        lazyReportBatch(reportData);\r\n        if (handler) {\r\n            handler.call(this, err, vm, info);\r\n        }\r\n    };\r\n}\r\n\r\n\r\nfunction errorBoundary(err) {\r\n    if (__webMonitorSDK__.react) return;\r\n    __webMonitorSDK__.react = true;\r\n     //todo：上报具体数据\r\n     const reportData = {\r\n        error: err?.stack,\r\n        info,\r\n        subType: 'react',\r\n        type: 'error',\r\n        startTime: window.performance.now(),\r\n        pageURL: window.location.href,\r\n    };\r\n    lazyReportBatch(reportData);\r\n}\r\n\r\nexport default {\r\n    install,\r\n    errorBoundary,\r\n    performance,\r\n    error,\r\n    behavior,\r\n    init,\r\n}\r\n\r\n\r\nexport function init(options) {\r\n    setConfig(options);\r\n    error();\r\n}\r\n\r\n// webMonitorSDK.init({\r\n//     appID: '123'\r\n// })\r\n//当时腾讯地图的SDK封装"],"names":["config","url","projectName","appID","userId","isImageUpload","batchSize","setConfig","options","key","deepCopy","target","_typeof","result","Array","isArray","generateUniqueId","Date","now","Math","random","toString","substring","cache","getCache","addCache","data","push","clearCache","length","originalProto","XMLHttpRequest","prototype","originalOpen","open","originalSend","send","report","console","error","reportData","JSON","stringify","id","imgRequest","window","navigator","sendBeacon","beaconRequest","xhrRequest","lazyReportBatch","dataCache","img","Image","src","encodeURIComponent","requestIdleCallback","xhr","call","timeout","setTimeout","originalFetch","fetch","overwriteFetch","newFetch","startTime","type","subType","method","then","response","endTime","duration","clone","status","success","ok","catch","err","observerEntries","document","readyState","observeEvent","onLoad","removeEventListener","addEventListener","entryHandler","list","getEntries","_iterator","_createForOfIteratorHelper","_step","s","n","done","entry","value","observer","disconnect","name","entryType","sourceType","initiatorType","dns","domainLookupEnd","domainLookupStart","tcp","connectEnd","connectStart","redirect","redirectEnd","redirectStart","ttfb","responseStart","protocol","nextHopProtocol","responseBodySize","encodedBodySize","responseHeaderSize","transferSize","resourceSize","decodedBodySize","performance","e","f","PerformanceObserver","observe","buffered","observeLCP","obj","json","toJSON","log","_objectSpread","pageUrl","location","href","observeFCP","observeLoad","event","requestAnimationFrame","forEach","timeStamp","observePaint","overwriteSendAndOpen","newOpen","_len","arguments","args","_key","apply","newSend","_this","Data","onLoaded","toUpperCase","_len2","_key2","observeEntries","html","outerHTML","paths","path","onerror","message","source","lineno","colno","stack","_e$reason","reason","click","eventType","tagName","innerHtml","innerHTML","outerHtml","with","offsetWidth","height","offsetHeight","pageChange","oldUrl","newUrl","newURL","form","to","uuid","from","pv","referror","referrer","behavior","onClick","__webMonitorSDK__","version","install","Vue","vue","handler","errorHandler","vm","info","pageURL","errorBoundary","react","init"],"mappings":";;;;AACA;AACA,IAAMA,MAAM,GAAG;AACX;AACAC,EAAAA,GAAG,EAAE,EAAE;AACPC,EAAAA,WAAW,EAAE,WAAW;AAAE;AAC1BC,EAAAA,KAAK,EAAE,KAAK;AACZC,EAAAA,MAAM,EAAE,KAAK;AACbC,EAAAA,aAAa,EAAE,KAAK;EACpBC,SAAS,EAAE,CAAC;AAChB,CAAC;AAGM,SAASC,SAASA,CAACC,OAAO,EAAE;AAC/B,EAAA,KAAK,IAAMC,GAAG,IAAIT,MAAM,EAAE;AACtB,IAAA,IAAIQ,OAAO,CAACC,GAAG,CAAC,EAAE;AACdT,MAAAA,MAAM,CAACS,GAAG,CAAC,GAAGD,OAAO,CAACC,GAAG,CAAC;AAC9B;AACJ;AACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBA;AACO,SAASC,QAAQA,CAACC,MAAM,EAAE;AAC7B,EAAA,IAAIC,OAAA,CAAOD,MAAM,CAAA,KAAK,QAAQ,EAAE;AAC5B,IAAA,IAAME,MAAM,GAAGC,KAAK,CAACC,OAAO,CAACJ,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE;AAC9C,IAAA,KAAK,IAAMF,GAAG,IAAIE,MAAM,EAAE;MACtB,IAAIC,OAAA,CAAOD,MAAM,CAACF,GAAG,CAAC,CAAA,IAAI,QAAQ,EAAE;QAChCI,MAAM,CAACJ,GAAG,CAAC,GAAGC,QAAQ,CAACC,MAAM,CAACF,GAAG,CAAC,CAAC;AACvC,OAAC,MAAM;AACHI,QAAAA,MAAM,CAACJ,GAAG,CAAC,GAAGE,MAAM,CAACF,GAAG,CAAC;AAC7B;AACJ;AAEA,IAAA,OAAOI,MAAM;AACjB;AACA,EAAA,OAAOF,MAAM;AACjB;AAGO,SAASK,gBAAgBA,GAAG;EAC/B,OAAO,KAAK,GAAGC,IAAI,CAACC,GAAG,EAAE,GAAG,GAAG,GAAGC,IAAI,CAACC,MAAM,EAAE,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;AAC9E;;AClBF,IAAMC,KAAK,GAAG,EAAE;AACT,SAASC,QAAQA,GAAG;EACvB,OAAOd,QAAQ,CAACa,KAAK,CAAC;AAC1B;AAEO,SAASE,QAAQA,CAACC,IAAI,EAAE;AAC3BH,EAAAA,KAAK,CAACI,IAAI,CAACD,IAAI,CAAC;AACpB;AAEO,SAASE,UAAUA,GAAG;EACzBL,KAAK,CAACM,MAAM,GAAG,CAAC;AACpB;;ACVO,IAAMC,eAAa,GAAGC,cAAc,CAACC,SAAS;AAC9C,IAAMC,cAAY,GAAGH,eAAa,CAACI,IAAI;AACvC,IAAMC,cAAY,GAAGL,eAAa,CAACM,IAAI;;AAE9C;AACO,SAASC,MAAMA,CAACX,IAAI,EAAE;AACzB,EAAA,IAAI,CAAC1B,MAAM,CAACC,GAAG,EAAE;AACbqC,IAAAA,OAAO,CAACC,KAAK,CAAC,cAAc,CAAC;AACjC;AACA,EAAA,IAAMC,UAAU,GAAGC,IAAI,CAACC,SAAS,CAAC;IAC9BC,EAAE,EAAE3B,gBAAgB,EAAE;AACtBU,IAAAA,IAAI,EAAJA;AACJ,GAAC,CAAC;AACF;EACA,IAAI1B,MAAM,CAACK,aAAa,EAAE;IACtBuC,UAAU,CAACJ,UAAU,CAAC;AAC1B,GAAC,MAAM;AACH;AACA,IAAA,IAAIK,MAAM,CAACC,SAAS,CAACC,UAAU,EAAE;MAC7B,OAAOC,aAAa,CAACR,UAAU,CAAC;AACpC,KAAC,MAAM;MACHS,UAAU,CAACT,UAAU,CAAC;AAC1B;AACJ;AACJ;;AAEA;AACO,SAASU,eAAeA,CAACxB,IAAI,EAAE;AACpC;EACAD,QAAQ,CAACC,IAAI,CAAC;AACd,EAAA,IAAMyB,SAAS,GAAG3B,QAAQ,EAAE;AAC5Bc,EAAAA,OAAO,CAACC,KAAK,CAAC,MAAM,EAAEY,SAAS,CAAC;EAChC,IAAIA,SAAS,CAACtB,MAAM,IAAIsB,SAAS,CAACtB,MAAM,GAAG7B,MAAM,CAACM,SAAS,EAAE;IAC3D+B,MAAM,CAACc,SAAS,CAAC;AACjBvB,IAAAA,UAAU,EAAE;AACd;AACF;;AAEA;;AAEO,SAASgB,UAAUA,CAAClB,IAAI,EAAE;AAC/B,EAAA,IAAM0B,GAAG,GAAG,IAAIC,KAAK,EAAE;AACvBD,EAAAA,GAAG,CAACE,GAAG,GAAGtD,MAAM,CAACC,GAAG,GAAG,QAAQ,GAAGsD,kBAAkB,CAACd,IAAI,CAACC,SAAS,CAAChB,IAAI,CAAC,CAAC;AAC5E;AAEO,SAASuB,UAAUA,CAACvB,IAAI,EAAE;EAC/B,IAAImB,MAAM,CAACW,mBAAmB,EAAE;IAC9BX,MAAM,CAACW,mBAAmB,CACxB,YAAM;AACJ,MAAA,IAAMC,GAAG,GAAG,IAAI1B,cAAc,EAAE;MAChCE,cAAY,CAACyB,IAAI,CAACD,GAAG,EAAE,MAAM,EAAEzD,MAAM,CAACC,GAAG,CAAC;MAC1CkC,cAAY,CAACuB,IAAI,CAACD,GAAG,EAAEhB,IAAI,CAACC,SAAS,CAAChB,IAAI,CAAC,CAAC;AAC9C,KAAC,EACD;AAAEiC,MAAAA,OAAO,EAAE;AAAK,KAClB,CAAC;AACH,GAAC,MAAM;AACLC,IAAAA,UAAU,CAAC,YAAM;AACf,MAAA,IAAMH,GAAG,GAAG,IAAI1B,cAAc,EAAE;MAChCE,cAAY,CAACyB,IAAI,CAACD,GAAG,EAAE,MAAM,EAAExD,GAAG,CAAC;MACnCkC,cAAY,CAACuB,IAAI,CAACD,GAAG,EAAEhB,IAAI,CAACC,SAAS,CAAChB,IAAI,CAAC,CAAC;AAC9C,KAAC,CAAC;AACJ;AACF;;AAEA;AACO,SAASsB,aAAaA,CAACtB,IAAI,EAAE;AAClC;EACA,IAAImB,MAAM,CAACW,mBAAmB,EAAE;IAC9BX,MAAM,CAACW,mBAAmB,CACxB,YAAM;MACJX,MAAM,CAACC,SAAS,CAACC,UAAU,CAAC/C,MAAM,CAACC,GAAG,EAAEyB,IAAI,CAAC;AAC/C,KAAC,EACD;AACEiC,MAAAA,OAAO,EAAE;AACX,KACF,CAAC;AACH,GAAC,MAAM;AACLC,IAAAA,UAAU,CAAC,YAAM;MACff,MAAM,CAACC,SAAS,CAACC,UAAU,CAAC/C,MAAM,CAACC,GAAG,EAAEyB,IAAI,CAAC;KAC9C,EAAE,IAAI,CAAC;AACV;AACF;;ACnFA,IAAMmC,aAAa,GAAGhB,MAAM,CAACiB,KAAK;AAElC,SAASC,cAAcA,GAAG;EACxBlB,MAAM,CAACiB,KAAK,GAAG,SAASE,QAAQA,CAAC/D,GAAG,EAAED,MAAM,EAAE;AAC5C;AACA,IAAA,IAAMiE,SAAS,GAAGhD,IAAI,CAACC,GAAG,EAAE;AAC5B,IAAA,IAAMsB,UAAU,GAAG;AACjB0B,MAAAA,IAAI,EAAE,aAAa;AACnBC,MAAAA,OAAO,EAAE,OAAO;AAChBlE,MAAAA,GAAG,EAAHA,GAAG;AACHmE,MAAAA,MAAM,EAAEpE,MAAM,KAAA,IAAA,IAANA,MAAM,KAANA,MAAAA,GAAAA,MAAAA,GAAAA,MAAM,CAAEoE,MAAM;AACtBH,MAAAA,SAAS,EAATA;KACD;IAED,OAAOJ,aAAa,CAAC5D,GAAG,EAAED,MAAM,CAAC,CAC9BqE,IAAI,CAAC,UAACC,QAAQ,EAAK;AAClB,MAAA,IAAMC,OAAO,GAAGtD,IAAI,CAACC,GAAG,EAAE;AAC1B,MAAA,IAAMsD,QAAQ,GAAGD,OAAO,GAAGN,SAAS;MACpCzB,UAAU,CAAC+B,OAAO,GAAGA,OAAO;MAC5B/B,UAAU,CAACgC,QAAQ,GAAGA,QAAQ;AAC9B;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAA,IAAM9C,IAAI,GAAG4C,QAAQ,CAACG,KAAK,EAAE;AAC7BjC,MAAAA,UAAU,CAACkC,MAAM,GAAGhD,IAAI,CAACgD,MAAM;AAC/BlC,MAAAA,UAAU,CAACmC,OAAO,GAAGjD,IAAI,CAACkD,EAAE;AAC5B;AACA,MAAA,OAAON,QAAQ;AACjB,KAAC,CAAC,CACDO,KAAK,CAAC,UAACC,GAAG,EAAK;AACd,MAAA,IAAMP,OAAO,GAAGtD,IAAI,CAACC,GAAG,EAAE;AAC1B,MAAA,IAAMsD,QAAQ,GAAGD,OAAO,GAAGN,SAAS;MACpCzB,UAAU,CAAC+B,OAAO,GAAGA,OAAO;MAC5B/B,UAAU,CAACgC,QAAQ,GAAGA,QAAQ;MAC9BhC,UAAU,CAACmC,OAAO,GAAG,KAAK;MAC1BnC,UAAU,CAACkC,MAAM,GAAG,CAAC;;AAErB;AACA;MACAxB,eAAe,CAACV,UAAU,CAAC;AAC7B,KAAC,CAAC;GACL;AACH;AAEe,SAASsB,KAAKA,GAAG;AAC9BC,EAAAA,cAAc,EAAE;AAClB;;ACnDA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACe,SAASgB,eAAeA,GAAG;AACxC,EAAA,IAAIC,QAAQ,CAACC,UAAU,KAAK,UAAU,EAAE;AACtCC,IAAAA,YAAY,EAAE;AAChB,GAAC,MAAM;AACL,IAAA,IAAMC,OAAM,GAAG,SAATA,MAAMA,GAAS;AACnBD,MAAAA,YAAY,EAAE;MACdrC,MAAM,CAACuC,mBAAmB,CAAC,MAAM,EAAED,OAAM,EAAE,IAAI,CAAC;KACjD;IACDtC,MAAM,CAACwC,gBAAgB,CAAC,MAAM,EAAEF,OAAM,EAAE,IAAI,CAAC;AAC/C;AACF;;AAEA;AACO,SAASD,YAAYA,GAAG;AAC7B,EAAA,IAAMI,YAAY,GAAG,SAAfA,YAAYA,CAAIC,IAAI,EAAK;AAC7B,IAAA,IAAM7D,IAAI,GAAG6D,IAAI,CAACC,UAAU,EAAE;AAAC,IAAA,IAAAC,SAAA,GAAAC,0BAAA,CACbhE,IAAI,CAAA;MAAAiE,KAAA;AAAA,IAAA,IAAA;MAAtB,KAAAF,SAAA,CAAAG,CAAA,EAAAD,EAAAA,CAAAA,CAAAA,KAAA,GAAAF,SAAA,CAAAI,CAAA,EAAAC,EAAAA,IAAA,GAAwB;AAAA,QAAA,IAAfC,KAAK,GAAAJ,KAAA,CAAAK,KAAA;AACZ,QAAA,IAAIC,QAAQ,EAAE;AACZ;UACAA,QAAQ,CAACC,UAAU,EAAE;AACvB;;AAEA;AACA,QAAA,IAAM1D,UAAU,GAAG;UACjB2D,IAAI,EAAEJ,KAAK,CAACI,IAAI;AAChBjC,UAAAA,IAAI,EAAE,aAAa;UACnBC,OAAO,EAAE4B,KAAK,CAACK,SAAS;UACxBC,UAAU,EAAEN,KAAK,CAACO,aAAa;AAAE;UACjC9B,QAAQ,EAAEuB,KAAK,CAACvB,QAAQ;AAAE;AAC1B;AACA+B,UAAAA,GAAG,EAAER,KAAK,CAACS,eAAe,GAAGT,KAAK,CAACU,iBAAiB;AACpDC,UAAAA,GAAG,EAAEX,KAAK,CAACY,UAAU,GAAGZ,KAAK,CAACa,YAAY;AAAE;AAC5CC,UAAAA,QAAQ,EAAEd,KAAK,CAACe,WAAW,GAAGf,KAAK,CAACgB,aAAa;AAAE;UACnDC,IAAI,EAAEjB,KAAK,CAACkB,aAAa;AAAE;UAC3BC,QAAQ,EAAEnB,KAAK,CAACoB,eAAe;AAAE;UACjCC,gBAAgB,EAAErB,KAAK,CAACsB,eAAe;AAAE;AACzCC,UAAAA,kBAAkB,EAAEvB,KAAK,CAACwB,YAAY,GAAGxB,KAAK,CAACsB,eAAe;AAAE;UAChEE,YAAY,EAAExB,KAAK,CAACwB,YAAY;AAAE;UAClCC,YAAY,EAAEzB,KAAK,CAAC0B,eAAe;AAAE;AACrCxD,UAAAA,SAAS,EAAEyD,WAAW,CAACxG,GAAG;SAC3B;AACD;QACAgC,eAAe,CAACV,UAAU,CAAC;AAC7B;AAAC,KAAA,CAAA,OAAAsC,GAAA,EAAA;MAAAW,SAAA,CAAAkC,CAAA,CAAA7C,GAAA,CAAA;AAAA,KAAA,SAAA;AAAAW,MAAAA,SAAA,CAAAmC,CAAA,EAAA;AAAA;GACF;AACD,EAAA,IAAI3B,QAAQ,GAAG,IAAI4B,mBAAmB,CAACvC,YAAY,CAAC;EAEpDW,QAAQ,CAAC6B,OAAO,CAAC;IAAE5D,IAAI,EAAE,CAAC,UAAU,CAAC;AAAE6D,IAAAA,QAAQ,EAAE;AAAK,GAAC,CAAC;AAC1D;;AC5De,SAASC,UAAUA,GAAG;AACnC,EAAA,IAAM/B,QAAQ,GAAG,IAAI4B,mBAAmB,CAACvC,YAAY,CAAC;;AAEtD;EACAW,QAAQ,CAAC6B,OAAO,CAAC;AAAE5D,IAAAA,IAAI,EAAE,0BAA0B;AAAE6D,IAAAA,QAAQ,EAAE;AAAK,GAAC,CAAC;AAEtE,EAAA,SAASzC,YAAYA,CAACC,IAAI,EAAE0C,GAAG,EAAE;AAC/B;AACA,IAAA,IAAIhC,QAAQ,EAAE;MACZA,QAAQ,CAACC,UAAU,EAAE;AACvB;;AAEA;IAAA,IAAAT,SAAA,GAAAC,0BAAA,CACoBH,IAAI,CAACC,UAAU,EAAE,CAAA;MAAAG,KAAA;AAAA,IAAA,IAAA;MAArC,KAAAF,SAAA,CAAAG,CAAA,EAAAD,EAAAA,CAAAA,CAAAA,KAAA,GAAAF,SAAA,CAAAI,CAAA,EAAAC,EAAAA,IAAA,GAAuC;AAAA,QAAA,IAA5BC,KAAK,GAAAJ,KAAA,CAAAK,KAAA;AACd,QAAA,IAAMkC,IAAI,GAAGnC,KAAK,CAACoC,MAAM,EAAE;AAC3B7F,QAAAA,OAAO,CAAC8F,GAAG,CAACF,IAAI,CAAC;AAEjB,QAAA,IAAM1F,UAAU,GAAA6F,cAAA,CAAAA,cAAA,KACXH,IAAI,CAAA,EAAA,EAAA,EAAA;AACPhE,UAAAA,IAAI,EAAE,aAAa;AAAE;UACrBC,OAAO,EAAE4B,KAAK,CAACI,IAAI;AACnBmC,UAAAA,OAAO,EAAEzF,MAAM,CAAC0F,QAAQ,CAACC;SAC1B,CAAA;QACDtF,eAAe,CAACV,UAAU,CAAC;AAC7B;AAAC,KAAA,CAAA,OAAAsC,GAAA,EAAA;MAAAW,SAAA,CAAAkC,CAAA,CAAA7C,GAAA,CAAA;AAAA,KAAA,SAAA;AAAAW,MAAAA,SAAA,CAAAmC,CAAA,EAAA;AAAA;AACH;AACF;;AC1Be,SAASa,UAAUA,GAAG;AACnC,EAAA,IAAMxC,QAAQ,GAAG,IAAI4B,mBAAmB,CAACvC,YAAY,CAAC;EAEtDW,QAAQ,CAAC6B,OAAO,CAAC;AAAE5D,IAAAA,IAAI,EAAE,OAAO;AAAE6D,IAAAA,QAAQ,EAAE;AAAK,GAAC,CAAC;AAEnD,EAAA,SAASzC,YAAYA,CAACC,IAAI,EAAE0C,GAAG,EAAE;AAC/B;IAAA,IAAAxC,SAAA,GAAAC,0BAAA,CACoBH,IAAI,CAACC,UAAU,EAAE,CAAA;MAAAG,KAAA;AAAA,IAAA,IAAA;MAArC,KAAAF,SAAA,CAAAG,CAAA,EAAAD,EAAAA,CAAAA,CAAAA,KAAA,GAAAF,SAAA,CAAAI,CAAA,EAAAC,EAAAA,IAAA,GAAuC;AAAA,QAAA,IAA5BC,KAAK,GAAAJ,KAAA,CAAAK,KAAA;AACd;AACA,QAAA,IAAID,KAAK,CAACI,IAAI,KAAK,wBAAwB,EAAE;UAC3CF,QAAQ,CAACC,UAAU,EAAE;AAErB,UAAA,IAAMgC,IAAI,GAAGnC,KAAK,CAACoC,MAAM,EAAE;AAC3B;AACA7F,UAAAA,OAAO,CAAC8F,GAAG,CAACF,IAAI,CAAC;;AAEjB;AACA,UAAA,IAAM1F,UAAU,GAAA6F,cAAA,CAAAA,cAAA,KACXH,IAAI,CAAA,EAAA,EAAA,EAAA;AACPhE,YAAAA,IAAI,EAAE,aAAa;AAAE;AACrB;YACAC,OAAO,EAAE4B,KAAK,CAACI,IAAI;AACnB;AACAmC,YAAAA,OAAO,EAAEzF,MAAM,CAAC0F,QAAQ,CAACC;WAC1B,CAAA;UACDtF,eAAe,CAACV,UAAU,CAAC;AAC7B;AACF;AAAC,KAAA,CAAA,OAAAsC,GAAA,EAAA;MAAAW,SAAA,CAAAkC,CAAA,CAAA7C,GAAA,CAAA;AAAA,KAAA,SAAA;AAAAW,MAAAA,SAAA,CAAAmC,CAAA,EAAA;AAAA;AACH;AACF;;AC5Be,SAASc,WAAWA,GAAG;AAClC;AACA7F,EAAAA,MAAM,CAACwC,gBAAgB,CAAC,UAAU,EAAE,UAAUsD,KAAK,EAAE;AACjDC,IAAAA,qBAAqB,CAAC,YAAM;MACxB,CAAC,MAAM,EAAE,kBAAkB,CAAC,CAACC,OAAO,CAAC,UAAC3E,IAAI,EAAK;AAC3C;AACA,QAAA,IAAM1B,UAAU,GAAG;AACf0B,UAAAA,IAAI,EAAE,aAAa;AACnBC,UAAAA,OAAO,EAAED,IAAI;AACboE,UAAAA,OAAO,EAAEzF,MAAM,CAAC0F,QAAQ,CAACC,IAAI;AAC7B;UACAvE,SAAS,EAAEyD,WAAW,CAACxG,GAAG,EAAE,GAAGyH,KAAK,CAACG,SAAS;SACjD;QACD5F,eAAe,CAACV,UAAU,CAAC;AAC/B,OAAC,CAAC;AAEN,KAAC,CAAC;AACN,GAAC,CAAC;AACN;;AClBe,SAASuG,YAAYA,GAAG;AACrC;AACA;AACA,EAAA,IAAM9C,QAAQ,GAAG,IAAI4B,mBAAmB,CAACvC,YAAY,CAAC;;AAEtD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;EACAW,QAAQ,CAAC6B,OAAO,CAAC;AAAE5D,IAAAA,IAAI,EAAE,OAAO;AAAE6D,IAAAA,QAAQ,EAAE;AAAK,GAAC,CAAC;;AAEnD;AACF;AACA;AACA;AACA;;AAEE;AACA;AACA;AACA;AACA;AACA;AACA,EAAA,SAASzC,YAAYA,CAACC,IAAI,EAAE0C,GAAG,EAAE;AAC/B;IAAA,IAAAxC,SAAA,GAAAC,0BAAA,CACoBH,IAAI,CAACC,UAAU,EAAE,CAAA;MAAAG,KAAA;AAAA,IAAA,IAAA;MAArC,KAAAF,SAAA,CAAAG,CAAA,EAAAD,EAAAA,CAAAA,CAAAA,KAAA,GAAAF,SAAA,CAAAI,CAAA,EAAAC,EAAAA,IAAA,GAAuC;AAAA,QAAA,IAA5BC,KAAK,GAAAJ,KAAA,CAAAK,KAAA;AACd;AACA,QAAA,IAAID,KAAK,CAACI,IAAI,KAAK,aAAa,EAAE;AAChC;AACA;UACAF,QAAQ,CAACC,UAAU,EAAE;AAErB,UAAA,IAAMgC,IAAI,GAAGnC,KAAK,CAACoC,MAAM,EAAE;AAC3B;AACA7F,UAAAA,OAAO,CAAC8F,GAAG,CAACF,IAAI,CAAC;;AAEjB;AACA,UAAA,IAAM1F,UAAU,GAAA6F,cAAA,CAAAA,cAAA,KACXH,IAAI,CAAA,EAAA,EAAA,EAAA;AACPhE,YAAAA,IAAI,EAAE,aAAa;AAAE;AACrB;YACAC,OAAO,EAAE4B,KAAK,CAACI,IAAI;AACnB;AACAmC,YAAAA,OAAO,EAAEzF,MAAM,CAAC0F,QAAQ,CAACC;WAC1B,CAAA;AACD;UACAtF,eAAe,CAACV,UAAU,CAAC;AAC7B;AACF;AAAC,KAAA,CAAA,OAAAsC,GAAA,EAAA;MAAAW,SAAA,CAAAkC,CAAA,CAAA7C,GAAA,CAAA;AAAA,KAAA,SAAA;AAAAW,MAAAA,SAAA,CAAAmC,CAAA,EAAA;AAAA;AACH;AACF;;AC5DA;;AAEA;AACA;;AAEO,IAAM9F,aAAa,GAAGC,cAAc,CAACC,SAAS;AACrD;;AAEA;AACO,IAAMG,YAAY,GAAGL,aAAa,CAACM,IAAI;AACvC,IAAMH,YAAY,GAAGH,aAAa,CAACI,IAAI;AAE/B,SAASuB,GAAGA,GAAG;AAC5BuF,EAAAA,oBAAoB,EAAE;AACxB;AAEA,SAASA,oBAAoBA,GAAG;AAC9B;AACA;AACAlH,EAAAA,aAAa,CAACI,IAAI,GAAG,SAAS+G,OAAOA,GAAU;AAAA,IAAA,KAAA,IAAAC,IAAA,GAAAC,SAAA,CAAAtH,MAAA,EAANuH,IAAI,GAAAtI,IAAAA,KAAA,CAAAoI,IAAA,GAAAG,IAAA,GAAA,CAAA,EAAAA,IAAA,GAAAH,IAAA,EAAAG,IAAA,EAAA,EAAA;AAAJD,MAAAA,IAAI,CAAAC,IAAA,CAAAF,GAAAA,SAAA,CAAAE,IAAA,CAAA;AAAA;IAC3C,IAAI,CAACpJ,GAAG,GAAGmJ,IAAI,CAAC,CAAC,CAAC,CAAC;IACnB,IAAI,CAAChF,MAAM,GAAGgF,IAAI,CAAC,CAAC,CAAC,CAAC;IACtBnH,YAAY,CAACqH,KAAK,CAAC,IAAI,EAAEF,IAAI,CAAC,CAAC;GAChC;AAEDtH,EAAAA,aAAa,CAACM,IAAI,GAAG,SAASmH,OAAOA,GAAU;AAAA,IAAA,IAAAC,KAAA,GAAA,IAAA;IAC7C,IAAI,CAACvF,SAAS,GAAGwF,IAAI,CAACvI,GAAG,EAAE,CAAC;AAC5B,IAAA,IAAMwI,SAAQ,GAAG,SAAXA,QAAQA,GAAS;MACrBF,KAAI,CAACjF,OAAO,GAAGkF,IAAI,CAACvI,GAAG,EAAE,CAAC;MAC1BsI,KAAI,CAAChF,QAAQ,GAAGgF,KAAI,CAACjF,OAAO,GAAGiF,KAAI,CAACvF,SAAS,CAAC;AAC9C;AACA,MAAA,IAAQhE,GAAG,GAAmDuJ,KAAI,CAA1DvJ,GAAG;QAAEmE,MAAM,GAA2CoF,KAAI,CAArDpF,MAAM;QAAEH,SAAS,GAAgCuF,KAAI,CAA7CvF,SAAS;QAAEM,OAAO,GAAuBiF,KAAI,CAAlCjF,OAAO;QAAEC,QAAQ,GAAagF,KAAI,CAAzBhF,QAAQ;AAAEE,QAAAA,MAAM,GAAK8E,KAAI,CAAf9E,MAAM,CAAU;;AAEnE;AACA,MAAA,IAAMlC,UAAU,GAAG;AACjBkC,QAAAA,MAAM,EAANA,MAAM;AACNF,QAAAA,QAAQ,EAARA,QAAQ;AACRvE,QAAAA,GAAG,EAAHA,GAAG;AACHmE,QAAAA,MAAM,EAAEA,MAAM,CAACuF,WAAW,EAAE;AAAE;AAC9B1F,QAAAA,SAAS,EAATA,SAAS;AACTM,QAAAA,OAAO,EAAPA,OAAO;AACPL,QAAAA,IAAI,EAAE,aAAa;AACnBS,QAAAA,OAAO,EAAED,MAAM,IAAI,GAAG,IAAIA,MAAM,GAAG,GAAG;AAAE;AACxCP,QAAAA,OAAO,EAAE;OACV;AACD;AACA;MACAjB,eAAe,CAACV,UAAU,CAAC;MAE3BgH,KAAI,CAACpE,mBAAmB,CAAC,SAAS,EAAEsE,SAAQ,EAAE,IAAI,CAAC,CAAC;KACrD;AACD;AACA;AACA;AACA;AACA;AACA;;AAEA;IACA,IAAI,CAACrE,gBAAgB,CAAC,SAAS,EAAEqE,SAAQ,EAAE,IAAI,CAAC;AAAC,IAAA,KAAA,IAAAE,KAAA,GAAAT,SAAA,CAAAtH,MAAA,EAlCVuH,IAAI,GAAAtI,IAAAA,KAAA,CAAA8I,KAAA,GAAAC,KAAA,GAAA,CAAA,EAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA,EAAA,EAAA;AAAJT,MAAAA,IAAI,CAAAS,KAAA,CAAAV,GAAAA,SAAA,CAAAU,KAAA,CAAA;AAAA;AAmC3C1H,IAAAA,YAAY,CAACmH,KAAK,CAAC,IAAI,EAAEF,IAAI,CAAC;GAC/B;AACH;;ACxDe,SAAS1B,aAAWA,GAAG;AAClC5D,EAAAA,KAAK,EAAE;AACPgG,EAAAA,eAAc,EAAE;AAChB9B,EAAAA,UAAU,EAAE;AACZS,EAAAA,UAAU,EAAE;AACZC,EAAAA,WAAW,EAAE;AACbK,EAAAA,YAAY,EAAE;AACdtF,EAAAA,GAAG,EAAE;AACT;;ACde,SAASlB,KAAKA,GAAG;AAC9B;AACAM,EAAAA,MAAM,CAACwC,gBAAgB,CACrB,OAAO,EACP,UAAUsD,KAAK,EAAE;AACf;AACA;AACA,IAAA,IAAMhI,MAAM,GAAGgI,KAAK,CAAChI,MAAM;IAC3B,IAAI,CAACA,MAAM,EAAE;AACX;AACA,MAAA;AACF;AAEA,IAAA,IAAIA,MAAM,CAAC2C,GAAG,IAAI3C,MAAM,CAAC6H,IAAI,EAAE;MAC7B,IAAMvI,GAAG,GAAGU,MAAM,CAAC2C,GAAG,IAAI3C,MAAM,CAAC6H,IAAI;AACrC;AACA,MAAA,IAAMhG,UAAU,GAAG;AACjB0B,QAAAA,IAAI,EAAE,OAAO;AACbC,QAAAA,OAAO,EAAE,iBAAiB;AAC1BlE,QAAAA,GAAG,EAAHA,GAAG;AACH;QACA8J,IAAI,EAAEpJ,MAAM,CAACqJ,SAAS;AACtB1B,QAAAA,OAAO,EAAEzF,MAAM,CAAC0F,QAAQ,CAACC,IAAI;AAC7ByB,QAAAA,KAAK,EAAEtB,KAAK,CAACuB,IAAI;OAClB;AACD;MACAhH,eAAe,CAACV,UAAU,CAAC;AAC7B;GACD,EACD,IACF,CAAC;;AAED;AACAK,EAAAA,MAAM,CAACsH,OAAO,GAAG,UAAUC,OAAO,EAAEC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEhI,KAAK,EAAE;AAChE,IAAA,IAAMC,UAAU,GAAG;AACjB0B,MAAAA,IAAI,EAAE,OAAO;AACbC,MAAAA,OAAO,EAAE,IAAI;AACbiG,MAAAA,OAAO,EAAPA,OAAO;AACPC,MAAAA,MAAM,EAANA,MAAM;AAAE;AACRC,MAAAA,MAAM,EAANA,MAAM;AACNC,MAAAA,KAAK,EAALA,KAAK;AACLC,MAAAA,KAAK,EAAEjI,KAAK,IAAIA,KAAK,CAACiI,KAAK;AAAE;AAC7BlC,MAAAA,OAAO,EAAEzF,MAAM,CAAC0F,QAAQ,CAACC,IAAI;AAC7BvE,MAAAA,SAAS,EAAEyD,WAAW,CAACxG,GAAG,EAAE;KAC7B;IACDgC,eAAe,CAACV,UAAU,CAAC;GAC5B;AACD;AACAK,EAAAA,MAAM,CAACwC,gBAAgB,CACrB,oBAAoB,EACpB,UAAUsC,CAAC,EAAE;AAAA,IAAA,IAAA8C,SAAA;AACX,IAAA,IAAMjI,UAAU,GAAG;AACjB0B,MAAAA,IAAI,EAAE,OAAO;AACbC,MAAAA,OAAO,EAAE,SAAS;AAClBuG,MAAAA,MAAM,EAAE,CAAAD,CAAAA,SAAA,GAAA9C,CAAC,CAAC+C,MAAM,MAAA,IAAA,IAAAD,SAAA,KAAA,MAAA,GAAA,MAAA,GAARA,SAAA,CAAUD,KAAK,KAAI7C,CAAC,CAAC+C,MAAM;AAAE;AACrCpC,MAAAA,OAAO,EAAEzF,MAAM,CAAC0F,QAAQ,CAACC,IAAI;AAC7BvE,MAAAA,SAAS,EAAEyD,WAAW,CAACxG,GAAG,EAAE;KAC7B;AACD;IACAgC,eAAe,CAACV,UAAU,CAAC;GAC5B,EACD,IACF,CAAC;AACH;;AChEe,SAASmI,KAAKA,GAAG;EAC5B,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC9B,OAAO,CAAC,UAAA+B,SAAS,EAAI;AAC7C/H,IAAAA,MAAM,CAACwC,gBAAgB,CAACuF,SAAS,EAAE,UAAAjD,CAAC,EAAI;AACpC,MAAA,IAAMhH,MAAM,GAAGgH,CAAC,CAAChH,MAAM;AACvB;MACA,IAAIA,MAAM,CAACkK,OAAO,EAAC;AACf,QAAA,IAAMrI,UAAU,GAAG;AACf;AACA0B,UAAAA,IAAI,EAAE,UAAU;AAChBC,UAAAA,OAAO,EAAE,OAAO;UAChBxD,MAAM,EAAEA,MAAM,CAACkK,OAAO;UACtB5G,SAAS,EAAE0D,CAAC,CAACmB,SAAS;UACtBgC,SAAS,EAAEnK,MAAM,CAACoK,SAAS;UAC3BC,SAAS,EAAErK,MAAM,CAACqJ,SAAS;UAC3BiB,IAAI,EAAEtK,MAAM,CAACuK,WAAW;UACxBC,MAAM,EAAExK,MAAM,CAACyK,YAAY;AAC3BR,UAAAA,SAAS,EAATA,SAAS;UACTV,IAAI,EAAEvC,CAAC,CAACuC;SACX;QACDhH,eAAe,CAACV,UAAU,CAAC;AAC/B;AAEJ,KAAC,CAAC;AACN,GAAC,CAAC;AACN;;ACtBe,SAAS6I,UAAUA,GAAG;AACjC;EACA,IAAIC,MAAM,GAAG,EAAE;AACfzI,EAAAA,MAAM,CAACwC,gBAAgB,CACnB,YAAY,EACZ,UAAUsD,KAAK,EAAE;AACbrG,IAAAA,OAAO,CAACC,KAAK,CAAC,YAAY,EAAEoG,KAAK,CAAC;AAClC,IAAA,IAAM4C,MAAM,GAAG5C,KAAK,CAAC6C,MAAM;AAC3B,IAAA,IAAMhJ,UAAU,GAAG;AACfiJ,MAAAA,IAAI,EAAEH,MAAM;AACZI,MAAAA,EAAE,EAAEH,MAAM;AACVrH,MAAAA,IAAI,EAAE,UAAU;AAChBC,MAAAA,OAAO,EAAE,YAAY;AACrBF,MAAAA,SAAS,EAAEyD,WAAW,CAACxG,GAAG,EAAE;MAC5ByK,IAAI,EAAE3K,gBAAgB;KACzB;IACDkC,eAAe,CAACV,UAAU,CAAC;AAC3B8I,IAAAA,MAAM,GAAGC,MAAM;GAClB,EACD,IAAI;GACP;EAED,IAAIK,IAAI,GAAG,EAAE;AACb/I,EAAAA,MAAM,CAACwC,gBAAgB,CACnB,UAAU,EACV,UAAUsD,KAAK,EAAE;AACbrG,IAAAA,OAAO,CAACC,KAAK,CAAC,UAAU,EAAEoG,KAAK,CAAC;AAChC,IAAA,IAAM+C,EAAE,GAAG7I,MAAM,CAAC0F,QAAQ,CAACC,IAAI;AAC/B,IAAA,IAAMhG,UAAU,GAAG;AACfiJ,MAAAA,IAAI,EAAEG,IAAI;AACVF,MAAAA,EAAE,EAAEA,EAAE;AACNxH,MAAAA,IAAI,EAAE,UAAU;AAChBC,MAAAA,OAAO,EAAE,UAAU;AACnBF,MAAAA,SAAS,EAAEyD,WAAW,CAACxG,GAAG,EAAE;MAC5ByK,IAAI,EAAE3K,gBAAgB;KACzB;IACDkC,eAAe,CAACV,UAAU,CAAC;AAC3BoJ,IAAAA,IAAI,GAAGF,EAAE;GACZ,EACD,IACJ,CAAC;AAEL;;AC1Ce,SAASG,EAAEA,GAAG;AACzB,EAAA,IAAMrJ,UAAU,GAAG;AACf0B,IAAAA,IAAI,EAAE,UAAU;AAChBC,IAAAA,OAAO,EAAE,IAAI;AACbmE,IAAAA,OAAO,EAAEzF,MAAM,CAAC0F,QAAQ,CAACC,IAAI;AAC7BvE,IAAAA,SAAS,EAAEyD,WAAW,CAACxG,GAAG,EAAE;IAC5B4K,QAAQ,EAAE9G,QAAQ,CAAC+G,QAAQ;AAAE;AAC7BJ,IAAAA,IAAI,EAAE3K,gBAAgB,EAAE;GAC3B;EACDkC,eAAe,CAACV,UAAU,CAAC;AAC/B;;ACZA;AAKe,SAASwJ,QAAQA,GAAG;EAC/BC,KAAO,EAAE,EACTZ,UAAU,EAAE,EACZQ,EAAE,EAAE;AACR;;ACJA;AACAhJ,MAAM,CAACqJ,iBAAiB,GAAG;AACvBC,EAAAA,OAAO,EAAE;AACb,CAAC;;AAED;AACQ,SAASC,OAAOA,CAACC,GAAG,EAAE7L,OAAO,EAAE;EACnC,IAAI0L,iBAAiB,CAACI,GAAG,EAAE;EAC3BJ,iBAAiB,CAACI,GAAG,GAAG,IAAI;EAC5B,IAAMC,OAAO,GAAGF,GAAG,CAACrM,MAAM,CAACwM,YAAY,CAAC;EACxCH,GAAG,CAACrM,MAAM,CAACwM,YAAY,GAAG,UAAU1H,GAAG,EAAE2H,EAAE,EAAEC,IAAI,EAAE;AAC/C;AACA,IAAA,IAAMlK,UAAU,GAAG;AACfkK,MAAAA,IAAI,EAAJA,IAAI;MACJnK,KAAK,EAAEuC,GAAG,CAAC0F,KAAK;AAChBrG,MAAAA,OAAO,EAAE,KAAK;AACdD,MAAAA,IAAI,EAAE,OAAO;AACbD,MAAAA,SAAS,EAAEpB,MAAM,CAAC6E,WAAW,CAACxG,GAAG,EAAE;AACnCyL,MAAAA,OAAO,EAAE9J,MAAM,CAAC0F,QAAQ,CAACC;KAC5B;IACDtF,eAAe,CAACV,UAAU,CAAC;AAC3B,IAAA,IAAI+J,OAAO,EAAE;MACTA,OAAO,CAAC7I,IAAI,CAAC,IAAI,EAAEoB,GAAG,EAAE2H,EAAE,EAAEC,IAAI,CAAC;AACrC;GACH;AACL;AAGA,SAASE,aAAaA,CAAC9H,GAAG,EAAE;EACxB,IAAIoH,iBAAiB,CAACW,KAAK,EAAE;EAC7BX,iBAAiB,CAACW,KAAK,GAAG,IAAI;AAC7B;AACA,EAAA,IAAMrK,UAAU,GAAG;AAChBD,IAAAA,KAAK,EAAEuC,GAAG,KAAA,IAAA,IAAHA,GAAG,KAAHA,MAAAA,GAAAA,MAAAA,GAAAA,GAAG,CAAE0F,KAAK;AACjBkC,IAAAA,IAAI,EAAJA,IAAI;AACJvI,IAAAA,OAAO,EAAE,OAAO;AAChBD,IAAAA,IAAI,EAAE,OAAO;AACbD,IAAAA,SAAS,EAAEpB,MAAM,CAAC6E,WAAW,CAACxG,GAAG,EAAE;AACnCyL,IAAAA,OAAO,EAAE9J,MAAM,CAAC0F,QAAQ,CAACC;GAC5B;EACDtF,eAAe,CAACV,UAAU,CAAC;AAC/B;AAEA,oBAAe;AACX4J,EAAAA,OAAO,EAAPA,OAAO;AACPQ,EAAAA,aAAa,EAAbA,aAAa;AACblF,EAAAA,WAAW,EAAXA,aAAW;AACXnF,EAAAA,KAAK,EAALA,KAAK;AACLyJ,EAAAA,QAAQ,EAARA,QAAQ;AACRc,EAAAA,IAAI,EAAJA;AACJ,CAAC;AAGM,SAASA,IAAIA,CAACtM,OAAO,EAAE;EAC1BD,SAAS,CAACC,OAAO,CAAC;AAClB+B,EAAAA,KAAK,EAAE;AACX;;AAEA;AACA;AACA;AACA;;;;;;"}